// This file is generated by a tool. All changes will be overwritten.
import gql from 'graphql-tag'

// Scalar Types
export type String = string
export type Int = number
export type Float = number
export type Boolean = boolean
export type ID = string
export type CustomScalar = string

// Fragment Types
export type ObjectTypeFields = {
  __typename: 'ObjectType'
  scalar: Nullable<Boolean>
}

// Input Types
export interface InputType {
  recursive: Nullable<InputType>
  nested: Nullable<NestedInputType>
  scalar: Nullable<Boolean>
  list: Nullable<ReadonlyArray<String>>
}
export interface NestedInputType {
  scalar: Nullable<Int>
}

// Operations
const __operations = {
  testScalars: gql`
    query testScalars {
      scalarString
      scalarInt
      scalarFloat
      scalarBoolean
      scalarID
      scalarCustom
      renamedString: scalarString
    }
  ` as __Operation<
    'query',
    {},
    {
      scalarString: Nullable<String>
      scalarInt: Nullable<Int>
      scalarFloat: Nullable<Float>
      scalarBoolean: Nullable<Boolean>
      scalarID: Nullable<ID>
      scalarCustom: Nullable<CustomScalar>
      renamedString: Nullable<String>
    }
  >,
  testNullability: gql`
    query testNullability {
      nullableBoolean
      nonNullableBoolean
    }
  ` as __Operation<
    'query',
    {},
    {
      nullableBoolean: Nullable<Boolean>
      nonNullableBoolean: Boolean
    }
  >,
  testNesting: gql`
    query testNesting {
      nestedObject {
        recursive {
          recursive {
            scalar
          }
        }
        nested {
          scalar
        }
        scalar
        list
      }
    }
  ` as __Operation<
    'query',
    {},
    {
      nestedObject: Nullable<{
        recursive: Nullable<{
          recursive: Nullable<{
            scalar: Nullable<Boolean>
          }>
        }>
        nested: Nullable<{
          scalar: Nullable<Int>
        }>
        scalar: Nullable<Boolean>
        list: Nullable<ReadonlyArray<String>>
      }>
    }
  >,
  testUnion: gql`
    query testUnion {
      union {
        ... on Tomato {
          id
          color
        }
        ... on Potato {
          id
          origin
        }
      }
    }
  ` as __Operation<
    'query',
    {},
    {
      union: Nullable<
        | ({
            __typename: 'Tomato'
            id: Nullable<ID>
            color: Nullable<String>
          })
        | ({
            __typename: 'Potato'
            id: Nullable<ID>
            origin: Nullable<String>
          })
      >
    }
  >,
  testMethods: gql`
    query testMethods(
      $reqParam: String!
      $optParam: Float!
      $input: InputType
      $list2: [CustomScalar!]!
    ) {
      method(requiredParam: $reqParam, optionalParam: $optParam, input: $input)
      renamedMethod: method2(list2: $list2)
    }
  ` as __Operation<
    'query',
    {
      reqParam: String
      optParam: Float
      input: Nullable<InputType>
      list2: ReadonlyArray<CustomScalar>
    },
    {
      method: Nullable<CustomScalar>
      renamedMethod: Nullable<ReadonlyArray<Nullable<CustomScalar>>>
    }
  >,
  testScalarsMutation: gql`
    mutation testScalarsMutation {
      scalarString
      scalarInt
      scalarFloat
      scalarBoolean
      scalarID
      scalarCustom
      renamedString: scalarString
    }
  ` as __Operation<
    'mutation',
    {},
    {
      scalarString: Nullable<String>
      scalarInt: Nullable<Int>
      scalarFloat: Nullable<Float>
      scalarBoolean: Nullable<Boolean>
      scalarID: Nullable<ID>
      scalarCustom: Nullable<CustomScalar>
      renamedString: Nullable<String>
    }
  >,
  testNullabilityMutation: gql`
    mutation testNullabilityMutation {
      nullableBoolean
      nonNullableBoolean
    }
  ` as __Operation<
    'mutation',
    {},
    {
      nullableBoolean: Nullable<Boolean>
      nonNullableBoolean: Boolean
    }
  >,
  testNestingMutation: gql`
    mutation testNestingMutation {
      nestedObject {
        recursive {
          recursive {
            scalar
          }
        }
        nested {
          scalar
        }
        scalar
        list
      }
    }
  ` as __Operation<
    'mutation',
    {},
    {
      nestedObject: Nullable<{
        recursive: Nullable<{
          recursive: Nullable<{
            scalar: Nullable<Boolean>
          }>
        }>
        nested: Nullable<{
          scalar: Nullable<Int>
        }>
        scalar: Nullable<Boolean>
        list: Nullable<ReadonlyArray<String>>
      }>
    }
  >,
  testMethodsMutation: gql`
    mutation testMethodsMutation(
      $reqParam: String!
      $optParam: Float!
      $input: InputType
      $list2: [CustomScalar!]!
    ) {
      method(requiredParam: $reqParam, optionalParam: $optParam, input: $input)
      renamedMethod: method2(list2: $list2)
    }
  ` as __Operation<
    'mutation',
    {
      reqParam: String
      optParam: Float
      input: Nullable<InputType>
      list2: ReadonlyArray<CustomScalar>
    },
    {
      method: Nullable<CustomScalar>
      renamedMethod: Nullable<ReadonlyArray<Nullable<CustomScalar>>>
    }
  >,
  testFragments: gql`
    query testFragments {
      nestedObject {
        ...ObjectTypeFields
      }
    }
  ` as __Operation<
    'query',
    {},
    {
      nestedObject: Nullable<ObjectTypeFields & {}>
    }
  >,
}

// Helper types
export type Nullable<T> = T | null
export type __Operation<Kind, Variables, Data> = {}
export type __Operations = typeof __operations
export type __OperationName = keyof __Operations
export type __OperationKind<
  Name extends __OperationName
> = __Operations[Name] extends __Operation<infer Kind, any, any> ? Kind : never
export type OperationVariables<
  Name extends __OperationName
> = __Operations[Name] extends __Operation<any, infer Variables, any>
  ? Variables
  : never
export type OperationData<
  Name extends __OperationName
> = __Operations[Name] extends __Operation<any, any, infer Data> ? Data : never
