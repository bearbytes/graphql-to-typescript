// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse schema: Schema 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@skip",
    "@include",
    "@deprecated",
  ],
  "_implementations": Object {
    "UnionType": Array [],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": Object {},
  "_queryType": "Query",
  "_subscriptionType": null,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "CustomScalar": "CustomScalar",
    "Float": "Float",
    "ID": "ID",
    "InputType": "InputType",
    "Int": "Int",
    "Mutation": "Mutation",
    "NestedInputType": "NestedInputType",
    "NestedObjectType": "NestedObjectType",
    "ObjectType": "ObjectType",
    "Potato": "Potato",
    "Query": "Query",
    "String": "String",
    "Tomato": "Tomato",
    "UnionType": "UnionType",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`parse schema: SchemaIR 1`] = `
Object {
  "types": Object {
    "Boolean": Object {
      "kind": "scalar",
      "scalar": "Boolean",
    },
    "CustomScalar": Object {
      "kind": "scalar",
      "scalar": "CustomScalar",
    },
    "Float": Object {
      "kind": "scalar",
      "scalar": "Float",
    },
    "ID": Object {
      "kind": "scalar",
      "scalar": "ID",
    },
    "InputType": Object {
      "kind": "inputObject",
    },
    "Int": Object {
      "kind": "scalar",
      "scalar": "Int",
    },
    "Mutation": Object {
      "fields": Object {
        "listOfNestedObject": Object {
          "kind": "list",
          "wrappedType": Object {
            "kind": "namedType",
            "typename": "ObjectType",
          },
        },
        "method": Object {
          "kind": "scalar",
          "scalar": "CustomScalar",
        },
        "method2": Object {
          "kind": "list",
          "wrappedType": Object {
            "kind": "scalar",
            "scalar": "CustomScalar",
          },
        },
        "nestedObject": Object {
          "fields": Object {
            "list": Object {
              "kind": "list",
              "wrappedType": Object {
                "kind": "nonNull",
                "wrappedType": Object {
                  "kind": "scalar",
                  "scalar": "String",
                },
              },
            },
            "nested": Object {
              "fields": Object {
                "scalar": Object {
                  "kind": "scalar",
                  "scalar": "Int",
                },
              },
              "kind": "object",
            },
            "recursive": Object {
              "kind": "namedType",
              "typename": "ObjectType",
            },
            "scalar": Object {
              "kind": "scalar",
              "scalar": "Boolean",
            },
          },
          "kind": "object",
        },
        "nonNullableBoolean": Object {
          "kind": "nonNull",
          "wrappedType": Object {
            "kind": "scalar",
            "scalar": "Boolean",
          },
        },
        "nullableBoolean": Object {
          "kind": "scalar",
          "scalar": "Boolean",
        },
        "scalarBoolean": Object {
          "kind": "scalar",
          "scalar": "Boolean",
        },
        "scalarCustom": Object {
          "kind": "scalar",
          "scalar": "CustomScalar",
        },
        "scalarFloat": Object {
          "kind": "scalar",
          "scalar": "Float",
        },
        "scalarID": Object {
          "kind": "scalar",
          "scalar": "ID",
        },
        "scalarInt": Object {
          "kind": "scalar",
          "scalar": "Int",
        },
        "scalarString": Object {
          "kind": "scalar",
          "scalar": "String",
        },
      },
      "kind": "object",
    },
    "NestedInputType": Object {
      "kind": "inputObject",
    },
    "NestedObjectType": Object {
      "fields": Object {
        "scalar": Object {
          "kind": "scalar",
          "scalar": "Int",
        },
      },
      "kind": "object",
    },
    "ObjectType": Object {
      "fields": Object {
        "list": Object {
          "kind": "list",
          "wrappedType": Object {
            "kind": "nonNull",
            "wrappedType": Object {
              "kind": "scalar",
              "scalar": "String",
            },
          },
        },
        "nested": Object {
          "fields": Object {
            "scalar": Object {
              "kind": "scalar",
              "scalar": "Int",
            },
          },
          "kind": "object",
        },
        "recursive": Object {
          "kind": "namedType",
          "typename": "ObjectType",
        },
        "scalar": Object {
          "kind": "scalar",
          "scalar": "Boolean",
        },
      },
      "kind": "object",
    },
    "Potato": Object {
      "fields": Object {
        "id": Object {
          "kind": "scalar",
          "scalar": "ID",
        },
        "origin": Object {
          "kind": "scalar",
          "scalar": "String",
        },
      },
      "kind": "object",
    },
    "Query": Object {
      "fields": Object {
        "listOfNestedObject": Object {
          "kind": "list",
          "wrappedType": Object {
            "kind": "namedType",
            "typename": "ObjectType",
          },
        },
        "method": Object {
          "kind": "scalar",
          "scalar": "CustomScalar",
        },
        "method2": Object {
          "kind": "list",
          "wrappedType": Object {
            "kind": "scalar",
            "scalar": "CustomScalar",
          },
        },
        "nestedObject": Object {
          "fields": Object {
            "list": Object {
              "kind": "list",
              "wrappedType": Object {
                "kind": "nonNull",
                "wrappedType": Object {
                  "kind": "scalar",
                  "scalar": "String",
                },
              },
            },
            "nested": Object {
              "fields": Object {
                "scalar": Object {
                  "kind": "scalar",
                  "scalar": "Int",
                },
              },
              "kind": "object",
            },
            "recursive": Object {
              "kind": "namedType",
              "typename": "ObjectType",
            },
            "scalar": Object {
              "kind": "scalar",
              "scalar": "Boolean",
            },
          },
          "kind": "object",
        },
        "nonNullableBoolean": Object {
          "kind": "nonNull",
          "wrappedType": Object {
            "kind": "scalar",
            "scalar": "Boolean",
          },
        },
        "nullableBoolean": Object {
          "kind": "scalar",
          "scalar": "Boolean",
        },
        "scalarBoolean": Object {
          "kind": "scalar",
          "scalar": "Boolean",
        },
        "scalarCustom": Object {
          "kind": "scalar",
          "scalar": "CustomScalar",
        },
        "scalarFloat": Object {
          "kind": "scalar",
          "scalar": "Float",
        },
        "scalarID": Object {
          "kind": "scalar",
          "scalar": "ID",
        },
        "scalarInt": Object {
          "kind": "scalar",
          "scalar": "Int",
        },
        "scalarString": Object {
          "kind": "scalar",
          "scalar": "String",
        },
        "union": Object {
          "kind": "union",
          "types": Array [
            Object {
              "kind": "namedType",
              "typename": "Tomato",
            },
            Object {
              "fields": Object {
                "id": Object {
                  "kind": "scalar",
                  "scalar": "ID",
                },
                "origin": Object {
                  "kind": "scalar",
                  "scalar": "String",
                },
              },
              "kind": "object",
            },
          ],
        },
      },
      "kind": "object",
    },
    "String": Object {
      "kind": "scalar",
      "scalar": "String",
    },
    "Tomato": Object {
      "fields": Object {
        "color": Object {
          "kind": "scalar",
          "scalar": "String",
        },
        "id": Object {
          "kind": "scalar",
          "scalar": "ID",
        },
      },
      "kind": "object",
    },
    "UnionType": Object {
      "kind": "union",
      "types": Array [
        Object {
          "kind": "namedType",
          "typename": "Tomato",
        },
        Object {
          "fields": Object {
            "id": Object {
              "kind": "scalar",
              "scalar": "ID",
            },
            "origin": Object {
              "kind": "scalar",
              "scalar": "String",
            },
          },
          "kind": "object",
        },
      ],
    },
    "__Directive": undefined,
    "__DirectiveLocation": undefined,
    "__EnumValue": undefined,
    "__Field": undefined,
    "__InputValue": undefined,
    "__Schema": undefined,
    "__Type": undefined,
    "__TypeKind": undefined,
  },
}
`;
